#!/usr/bin/env python

import json
import roslib
import rospy
from std_msgs.msg import Bool, Int32MultiArray
from geometry_msgs.msg import PoseStamped
from aruco_msgs.msg import MarkerArray, Marker

done = None
objects_msg = None

def done_callback(msg):
	global done
	done = msg

def object_callback(msg):
	global objects_msg
	objects_msg = msg


rospy.init_node('find_and_check')
check_sub = rospy.Publisher('check_point', PoseStamped, queue_size=1)
done_pub = rospy.Subscriber('check_done', Bool, done_callback)

box_pub = rospy.Subscriber('/sign_box', Int32MultiArray, object_callback)

pose_pub = rospy.Publisher('move_to', PoseStamped, queue_size=10)
#pose_sub = rospy.Subscriber('cf1/pose', PoseStamped, pose_callback)

#tf_buf   = tf2_ros.Buffer()


#This node assumes that any seen object is something we want to check
#And so it triggers the checkpoint rite
def main():
	label_file_name = rospy.get_param(rospy.get_name() + "/labels")
	rospy.loginfo(label_file_name)
	with open(label_file_name, 'rb') as f:
		labels = f.read().strip().split("\n")
		for a in labels:
			rospy.loginfo(a)

	w_name = rospy.get_param(rospy.get_name() + "/world_name")
	rospy.loginfo(w_name)
	with open(w_name, 'rb') as f:
		world = json.load(f)


	global objects_msg
	global done
	rate = rospy.Rate(10) #Hz
	while not rospy.is_shutdown():
		if objects_msg:
			#TODO: decide which object to check
			#TODO: Check the stamp so it's not too long ago
			object = objects_msg.data[2]
			objects_msg = None

			labels[object]

			

			#TODO: Go to a position that makes it clearer which object is being checked


			#trigger checkpoint
			#receive "done" and stop
		rate.sleep()

if __name__ == "__main__":
	main()
